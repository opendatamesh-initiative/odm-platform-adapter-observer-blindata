name: odm-platform-adapter-observer-blindata CI/CD

on:
  release:
    types: [created]

env:
  IMAGE_NAME: odm-platform-adapter-observer-blindata

jobs:
  verify-version:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Get Git Tag
        run: |
          TAG_VERSION=$(echo "${{ github.ref_name }}" | sed 's/[^0-9.]//g')
          echo "TAG_VERSION=${TAG_VERSION}" >> $GITHUB_ENV
      - name: Get Maven Version
        run: |
          MAVEN_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "MAVEN_VERSION=${MAVEN_VERSION}" >> $GITHUB_ENV
      - name: Check Tag and Version Match
        run: |
          if [ "${{ env.TAG_VERSION }}" != "${{ env.MAVEN_VERSION }}" ]; then
            echo "Git tag (${{ env.TAG_VERSION }}) does not match POM version (${{ env.MAVEN_VERSION }})"
            exit 1
          fi
      - name: Execute tests with Maven
        run: mvn -B test -Dspring.profiles.active=test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-maven-packages:
    runs-on: ubuntu-latest
    needs: verify-version
    permissions:
      contents: read
      packages: write
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Publish Maven package
        run: mvn -DskipTests -DGitHubPackages=true --batch-mode deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-docker-images:
    runs-on: ubuntu-latest
    needs: verify-version
    permissions:
      contents: read
      packages: write
    steps:
      - name: Get Git Tag
        run: |
          echo "TAG_VERSION=$(echo ${{ github.ref_name }} | sed 's/[^0-9.]//g')" >> $GITHUB_ENV
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Build Maven package
        run: mvn install -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Docker images
        run: docker build . --file Dockerfile --tag ${{ env.IMAGE_NAME }} --label "runnumber=${{ github.run_id }}"
      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
      - name: Push images to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/opendatamesh-initiative/${{ env.IMAGE_NAME }}
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          docker tag ${{ env.IMAGE_NAME }} $IMAGE_ID:${{ env.TAG_VERSION }}
          docker push $IMAGE_ID:${{ env.TAG_VERSION }}
      - name: DockerHub login
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PWD: ${{ secrets.DOCKER_PASSWORD }}
        run: docker login -u $DOCKER_USER -p $DOCKER_PWD
      - name: DockerHub images build
        run: docker build . --file Dockerfile --tag opendatamesh/${{ env.IMAGE_NAME }}:${{ env.TAG_VERSION }}
      - name: DockerHub images push
        run: docker push opendatamesh/${{ env.IMAGE_NAME }}:${{ env.TAG_VERSION }}
